80c8f3770b17f2872f63acf608ab9bb9
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TapGestureHandler = exports.tapHandlerName = exports.tapGestureHandlerProps = void 0;
var _createHandler = _interopRequireDefault(require("./createHandler"));
var _gestureHandlerCommon = require("./gestureHandlerCommon");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var tapGestureHandlerProps = ['maxDurationMs', 'maxDelayMs', 'numberOfTaps', 'maxDeltaX', 'maxDeltaY', 'maxDist', 'minPointers'];
exports.tapGestureHandlerProps = tapGestureHandlerProps;
var tapHandlerName = 'TapGestureHandler';
exports.tapHandlerName = tapHandlerName;
var TapGestureHandler = (0, _createHandler.default)({
  name: tapHandlerName,
  allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), tapGestureHandlerProps),
  config: {
    shouldCancelWhenOutside: true
  }
});
exports.TapGestureHandler = TapGestureHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBOzs7Ozs7QUFLTyxJQUFNQSxzQkFBc0IsR0FBRyxDQUNwQyxlQURvQyxFQUVwQyxZQUZvQyxFQUdwQyxjQUhvQyxFQUlwQyxXQUpvQyxFQUtwQyxXQUxvQyxFQU1wQyxTQU5vQyxFQU9wQyxhQVBvQyxDQUEvQjs7QUF1RUEsSUFBTUMsY0FBYyxHQUFHLG1CQUF2Qjs7QUFJQSxJQUFNQyxpQkFBaUIsR0FBRyw0QkFHL0I7RUFDQUMsSUFBSSxFQUFFRixjQUROO0VBRUFHLFlBQVksNkNBQ1BDLDZDQURTLEdBRVRMLHNCQUZTLENBRmQ7RUFNQU0sTUFBTSxFQUFFO0lBQ05DLHVCQUF1QixFQUFFO0VBRG5CO0FBTlIsQ0FIK0IsQ0FBMUIiLCJuYW1lcyI6WyJ0YXBHZXN0dXJlSGFuZGxlclByb3BzIiwidGFwSGFuZGxlck5hbWUiLCJUYXBHZXN0dXJlSGFuZGxlciIsIm5hbWUiLCJhbGxvd2VkUHJvcHMiLCJiYXNlR2VzdHVyZUhhbmRsZXJQcm9wcyIsImNvbmZpZyIsInNob3VsZENhbmNlbFdoZW5PdXRzaWRlIl0sInNvdXJjZXMiOlsiVGFwR2VzdHVyZUhhbmRsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUhhbmRsZXIgZnJvbSAnLi9jcmVhdGVIYW5kbGVyJztcbmltcG9ydCB7XG4gIEJhc2VHZXN0dXJlSGFuZGxlclByb3BzLFxuICBiYXNlR2VzdHVyZUhhbmRsZXJQcm9wcyxcbn0gZnJvbSAnLi9nZXN0dXJlSGFuZGxlckNvbW1vbic7XG5cbmV4cG9ydCBjb25zdCB0YXBHZXN0dXJlSGFuZGxlclByb3BzID0gW1xuICAnbWF4RHVyYXRpb25NcycsXG4gICdtYXhEZWxheU1zJyxcbiAgJ251bWJlck9mVGFwcycsXG4gICdtYXhEZWx0YVgnLFxuICAnbWF4RGVsdGFZJyxcbiAgJ21heERpc3QnLFxuICAnbWluUG9pbnRlcnMnLFxuXSBhcyBjb25zdDtcblxuZXhwb3J0IHR5cGUgVGFwR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWQgPSB7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xuICBhYnNvbHV0ZVg6IG51bWJlcjtcbiAgYWJzb2x1dGVZOiBudW1iZXI7XG59O1xuZXhwb3J0IGludGVyZmFjZSBUYXBHZXN0dXJlQ29uZmlnIHtcbiAgLyoqXG4gICAqIE1pbmltdW0gbnVtYmVyIG9mIHBvaW50ZXJzIChmaW5nZXJzKSByZXF1aXJlZCB0byBiZSBwbGFjZWQgYmVmb3JlIHRoZVxuICAgKiBoYW5kbGVyIGFjdGl2YXRlcy4gU2hvdWxkIGJlIGEgcG9zaXRpdmUgaW50ZWdlci5cbiAgICogVGhlIGRlZmF1bHQgdmFsdWUgaXMgMS5cbiAgICovXG4gIG1pblBvaW50ZXJzPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBNYXhpbXVtIHRpbWUsIGV4cHJlc3NlZCBpbiBtaWxsaXNlY29uZHMsIHRoYXQgZGVmaW5lcyBob3cgZmFzdCBhIGZpbmdlclxuICAgKiBtdXN0IGJlIHJlbGVhc2VkIGFmdGVyIGEgdG91Y2guIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDUwMC5cbiAgICovXG4gIG1heER1cmF0aW9uTXM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE1heGltdW0gdGltZSwgZXhwcmVzc2VkIGluIG1pbGxpc2Vjb25kcywgdGhhdCBjYW4gcGFzcyBiZWZvcmUgdGhlIG5leHQgdGFwXG4gICAqIGlmIG1hbnkgdGFwcyBhcmUgcmVxdWlyZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDUwMC5cbiAgICovXG4gIG1heERlbGF5TXM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE51bWJlciBvZiB0YXAgZ2VzdHVyZXMgcmVxdWlyZWQgdG8gYWN0aXZhdGUgdGhlIGhhbmRsZXIuIFRoZSBkZWZhdWx0IHZhbHVlXG4gICAqIGlzIDEuXG4gICAqL1xuICBudW1iZXJPZlRhcHM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE1heGltdW0gZGlzdGFuY2UsIGV4cHJlc3NlZCBpbiBwb2ludHMsIHRoYXQgZGVmaW5lcyBob3cgZmFyIHRoZSBmaW5nZXIgaXNcbiAgICogYWxsb3dlZCB0byB0cmF2ZWwgYWxvbmcgdGhlIFggYXhpcyBkdXJpbmcgYSB0YXAgZ2VzdHVyZS4gSWYgdGhlIGZpbmdlclxuICAgKiB0cmF2ZWxzIGZ1cnRoZXIgdGhhbiB0aGUgZGVmaW5lZCBkaXN0YW5jZSBhbG9uZyB0aGUgWCBheGlzIGFuZCB0aGUgaGFuZGxlclxuICAgKiBoYXNuJ3QgeWV0IGFjdGl2YXRlZCwgaXQgd2lsbCBmYWlsIHRvIHJlY29nbml6ZSB0aGUgZ2VzdHVyZS5cbiAgICovXG4gIG1heERlbHRhWD86IG51bWJlcjtcblxuICAvKipcbiAgICogTWF4aW11bSBkaXN0YW5jZSwgZXhwcmVzc2VkIGluIHBvaW50cywgdGhhdCBkZWZpbmVzIGhvdyBmYXIgdGhlIGZpbmdlciBpc1xuICAgKiBhbGxvd2VkIHRvIHRyYXZlbCBhbG9uZyB0aGUgWSBheGlzIGR1cmluZyBhIHRhcCBnZXN0dXJlLiBJZiB0aGUgZmluZ2VyXG4gICAqIHRyYXZlbHMgZnVydGhlciB0aGFuIHRoZSBkZWZpbmVkIGRpc3RhbmNlIGFsb25nIHRoZSBZIGF4aXMgYW5kIHRoZSBoYW5kbGVyXG4gICAqIGhhc24ndCB5ZXQgYWN0aXZhdGVkLCBpdCB3aWxsIGZhaWwgdG8gcmVjb2duaXplIHRoZSBnZXN0dXJlLlxuICAgKi9cbiAgbWF4RGVsdGFZPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBNYXhpbXVtIGRpc3RhbmNlLCBleHByZXNzZWQgaW4gcG9pbnRzLCB0aGF0IGRlZmluZXMgaG93IGZhciB0aGUgZmluZ2VyIGlzXG4gICAqIGFsbG93ZWQgdG8gdHJhdmVsIGR1cmluZyBhIHRhcCBnZXN0dXJlLiBJZiB0aGUgZmluZ2VyIHRyYXZlbHMgZnVydGhlciB0aGFuXG4gICAqIHRoZSBkZWZpbmVkIGRpc3RhbmNlIGFuZCB0aGUgaGFuZGxlciBoYXNuJ3QgeWV0XG4gICAqIGFjdGl2YXRlZCwgaXQgd2lsbCBmYWlsIHRvIHJlY29nbml6ZSB0aGUgZ2VzdHVyZS5cbiAgICovXG4gIG1heERpc3Q/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFwR2VzdHVyZUhhbmRsZXJQcm9wc1xuICBleHRlbmRzIEJhc2VHZXN0dXJlSGFuZGxlclByb3BzPFRhcEdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkPixcbiAgICBUYXBHZXN0dXJlQ29uZmlnIHt9XG5cbmV4cG9ydCBjb25zdCB0YXBIYW5kbGVyTmFtZSA9ICdUYXBHZXN0dXJlSGFuZGxlcic7XG5cbmV4cG9ydCB0eXBlIFRhcEdlc3R1cmVIYW5kbGVyID0gdHlwZW9mIFRhcEdlc3R1cmVIYW5kbGVyO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1yZWRlY2xhcmUgLS0gYmFja3dhcmQgY29tcGF0aWJpbGl0eTsgc2VlIGRlc2NyaXB0aW9uIG9uIHRoZSB0b3Agb2YgZ2VzdHVyZUhhbmRsZXJDb21tb24udHMgZmlsZVxuZXhwb3J0IGNvbnN0IFRhcEdlc3R1cmVIYW5kbGVyID0gY3JlYXRlSGFuZGxlcjxcbiAgVGFwR2VzdHVyZUhhbmRsZXJQcm9wcyxcbiAgVGFwR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWRcbj4oe1xuICBuYW1lOiB0YXBIYW5kbGVyTmFtZSxcbiAgYWxsb3dlZFByb3BzOiBbXG4gICAgLi4uYmFzZUdlc3R1cmVIYW5kbGVyUHJvcHMsXG4gICAgLi4udGFwR2VzdHVyZUhhbmRsZXJQcm9wcyxcbiAgXSBhcyBjb25zdCxcbiAgY29uZmlnOiB7XG4gICAgc2hvdWxkQ2FuY2VsV2hlbk91dHNpZGU6IHRydWUsXG4gIH0sXG59KTtcbiJdfQ==