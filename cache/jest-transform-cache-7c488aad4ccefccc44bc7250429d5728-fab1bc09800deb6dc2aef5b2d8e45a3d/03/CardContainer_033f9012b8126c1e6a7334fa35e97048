e020bfd01f26d1d66f46ff79b1a423fe
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _elements = require("@react-navigation/elements");
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ModalPresentationContext = _interopRequireDefault(require("../../utils/ModalPresentationContext"));
var _useKeyboardManager = _interopRequireDefault(require("../../utils/useKeyboardManager"));
var _Card = _interopRequireDefault(require("./Card"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var EPSILON = 0.1;
function CardContainer(_ref) {
  var interpolationIndex = _ref.interpolationIndex,
    index = _ref.index,
    active = _ref.active,
    closing = _ref.closing,
    gesture = _ref.gesture,
    focused = _ref.focused,
    modal = _ref.modal,
    getPreviousScene = _ref.getPreviousScene,
    getFocusedRoute = _ref.getFocusedRoute,
    headerDarkContent = _ref.headerDarkContent,
    hasAbsoluteFloatHeader = _ref.hasAbsoluteFloatHeader,
    headerHeight = _ref.headerHeight,
    onHeaderHeightChange = _ref.onHeaderHeightChange,
    isParentHeaderShown = _ref.isParentHeaderShown,
    isNextScreenTransparent = _ref.isNextScreenTransparent,
    detachCurrentScreen = _ref.detachCurrentScreen,
    layout = _ref.layout,
    onCloseRoute = _ref.onCloseRoute,
    onOpenRoute = _ref.onOpenRoute,
    onGestureCancel = _ref.onGestureCancel,
    onGestureEnd = _ref.onGestureEnd,
    onGestureStart = _ref.onGestureStart,
    onTransitionEnd = _ref.onTransitionEnd,
    onTransitionStart = _ref.onTransitionStart,
    renderHeader = _ref.renderHeader,
    renderScene = _ref.renderScene,
    safeAreaInsetBottom = _ref.safeAreaInsetBottom,
    safeAreaInsetLeft = _ref.safeAreaInsetLeft,
    safeAreaInsetRight = _ref.safeAreaInsetRight,
    safeAreaInsetTop = _ref.safeAreaInsetTop,
    scene = _ref.scene;
  var parentHeaderHeight = React.useContext(_elements.HeaderHeightContext);
  var _ref4 = (0, _useKeyboardManager.default)(React.useCallback(function () {
      var _scene$descriptor = scene.descriptor,
        options = _scene$descriptor.options,
        navigation = _scene$descriptor.navigation;
      return navigation.isFocused() && options.keyboardHandlingEnabled !== false;
    }, [scene.descriptor])),
    onPageChangeStart = _ref4.onPageChangeStart,
    onPageChangeCancel = _ref4.onPageChangeCancel,
    onPageChangeConfirm = _ref4.onPageChangeConfirm;
  var handleOpen = function handleOpen() {
    var route = scene.descriptor.route;
    onTransitionEnd({
      route: route
    }, false);
    onOpenRoute({
      route: route
    });
  };
  var handleClose = function handleClose() {
    var route = scene.descriptor.route;
    onTransitionEnd({
      route: route
    }, true);
    onCloseRoute({
      route: route
    });
  };
  var handleGestureBegin = function handleGestureBegin() {
    var route = scene.descriptor.route;
    onPageChangeStart();
    onGestureStart({
      route: route
    });
  };
  var handleGestureCanceled = function handleGestureCanceled() {
    var route = scene.descriptor.route;
    onPageChangeCancel();
    onGestureCancel({
      route: route
    });
  };
  var handleGestureEnd = function handleGestureEnd() {
    var route = scene.descriptor.route;
    onGestureEnd({
      route: route
    });
  };
  var handleTransition = function handleTransition(_ref2) {
    var closing = _ref2.closing,
      gesture = _ref2.gesture;
    var route = scene.descriptor.route;
    if (!gesture) {
      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);
    } else if (active && closing) {
      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);
    } else {
      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();
    }
    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({
      route: route
    }, closing);
  };
  var insets = {
    top: safeAreaInsetTop,
    right: safeAreaInsetRight,
    bottom: safeAreaInsetBottom,
    left: safeAreaInsetLeft
  };
  var _ref5 = (0, _native.useTheme)(),
    colors = _ref5.colors;
  var _React$useState = React.useState('box-none'),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    pointerEvents = _React$useState2[0],
    setPointerEvents = _React$useState2[1];
  React.useEffect(function () {
    var _scene$progress$next, _scene$progress$next$;
    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {
      var value = _ref3.value;
      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');
    });
    return function () {
      if (listener) {
        var _scene$progress$next2, _scene$progress$next3;
        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);
      }
    };
  }, [pointerEvents, scene.progress.next]);
  var _scene$descriptor$opt = scene.descriptor.options,
    presentation = _scene$descriptor$opt.presentation,
    animationEnabled = _scene$descriptor$opt.animationEnabled,
    cardOverlay = _scene$descriptor$opt.cardOverlay,
    cardOverlayEnabled = _scene$descriptor$opt.cardOverlayEnabled,
    cardShadowEnabled = _scene$descriptor$opt.cardShadowEnabled,
    cardStyle = _scene$descriptor$opt.cardStyle,
    cardStyleInterpolator = _scene$descriptor$opt.cardStyleInterpolator,
    gestureDirection = _scene$descriptor$opt.gestureDirection,
    gestureEnabled = _scene$descriptor$opt.gestureEnabled,
    gestureResponseDistance = _scene$descriptor$opt.gestureResponseDistance,
    gestureVelocityImpact = _scene$descriptor$opt.gestureVelocityImpact,
    headerMode = _scene$descriptor$opt.headerMode,
    headerShown = _scene$descriptor$opt.headerShown,
    transitionSpec = _scene$descriptor$opt.transitionSpec;
  var previousScene = getPreviousScene({
    route: scene.descriptor.route
  });
  var backTitle;
  if (previousScene) {
    var _previousScene$descri = previousScene.descriptor,
      options = _previousScene$descri.options,
      route = _previousScene$descri.route;
    backTitle = (0, _elements.getHeaderTitle)(options, route.name);
  }
  var headerBack = React.useMemo(function () {
    return backTitle !== undefined ? {
      title: backTitle
    } : undefined;
  }, [backTitle]);
  return React.createElement(_Card.default, {
    interpolationIndex: interpolationIndex,
    gestureDirection: gestureDirection,
    layout: layout,
    insets: insets,
    gesture: gesture,
    current: scene.progress.current,
    next: scene.progress.next,
    closing: closing,
    onOpen: handleOpen,
    onClose: handleClose,
    overlay: cardOverlay,
    overlayEnabled: cardOverlayEnabled,
    shadowEnabled: cardShadowEnabled,
    onTransition: handleTransition,
    onGestureBegin: handleGestureBegin,
    onGestureCanceled: handleGestureCanceled,
    onGestureEnd: handleGestureEnd,
    gestureEnabled: index === 0 ? false : gestureEnabled,
    gestureResponseDistance: gestureResponseDistance,
    gestureVelocityImpact: gestureVelocityImpact,
    transitionSpec: transitionSpec,
    styleInterpolator: cardStyleInterpolator,
    accessibilityElementsHidden: !focused,
    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
    pointerEvents: active ? 'box-none' : pointerEvents,
    pageOverflowEnabled: headerMode !== 'float' && presentation !== 'modal',
    headerDarkContent: headerDarkContent,
    containerStyle: hasAbsoluteFloatHeader && headerMode !== 'screen' ? {
      marginTop: headerHeight
    } : null,
    contentStyle: [{
      backgroundColor: presentation === 'transparentModal' ? 'transparent' : colors.background
    }, cardStyle],
    style: [{
      overflow: active ? undefined : 'hidden',
      display: animationEnabled === false && isNextScreenTransparent === false && detachCurrentScreen !== false && !focused ? 'none' : 'flex'
    }, _reactNative.StyleSheet.absoluteFill]
  }, React.createElement(_reactNative.View, {
    style: styles.container
  }, React.createElement(_ModalPresentationContext.default.Provider, {
    value: modal
  }, React.createElement(_reactNative.View, {
    style: styles.scene
  }, React.createElement(_elements.HeaderBackContext.Provider, {
    value: headerBack
  }, React.createElement(_elements.HeaderShownContext.Provider, {
    value: isParentHeaderShown || headerShown !== false
  }, React.createElement(_elements.HeaderHeightContext.Provider, {
    value: headerShown ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0
  }, renderScene({
    route: scene.descriptor.route
  }))))), headerMode !== 'float' ? renderHeader({
    mode: 'screen',
    layout: layout,
    scenes: [previousScene, scene],
    getPreviousScene: getPreviousScene,
    getFocusedRoute: getFocusedRoute,
    onContentHeightChange: onHeaderHeightChange
  }) : null)));
}
var _default = React.memo(CardContainer);
exports.default = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'column-reverse'
  },
  scene: {
    flex: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,