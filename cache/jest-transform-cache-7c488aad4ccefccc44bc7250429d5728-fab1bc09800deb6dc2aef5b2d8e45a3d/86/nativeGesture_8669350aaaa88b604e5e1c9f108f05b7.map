{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;IAMaA,aAAN;EAAA;EAAA;EAGLC,yBAAc;IAAA;IAAA;IACZ;IADYC,uEAF+C,EAE/C;IAGZ,MAAKC,WAAL,GAAmB,0BAAnB;IAAA;EACD;EAAA;IAAA;IAAA,OAEDC,+BAAsBC,KAAD,EAAiB;MACpC,KAAKC,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;MACA,OAAO,IAAP;IACD;EAAA;IAAA;IAAA,OAEDE,8BAAqBF,KAAD,EAAiB;MACnC,KAAKC,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;MACA,OAAO,IAAP;IACD;EAAA;EAAA;AAAA,EAjBgCG,oBAA5B","names":["NativeGesture","constructor","_defineProperty","handlerName","shouldActivateOnStart","value","config","disallowInterruption","BaseGesture"],"sources":["nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  NativeViewGestureConfig,\n  NativeViewGestureHandlerPayload,\n} from '../NativeViewGestureHandler';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"]}