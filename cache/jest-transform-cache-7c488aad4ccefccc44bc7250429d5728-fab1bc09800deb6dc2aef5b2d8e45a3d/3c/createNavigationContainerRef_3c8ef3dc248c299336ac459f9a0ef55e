834e0643bed3c4a789c0752f1524ca61
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NOT_INITIALIZED_ERROR = void 0;
exports.default = createNavigationContainerRef;
var _routers = require("@react-navigation/routers");
var NOT_INITIALIZED_ERROR = "The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.";
exports.NOT_INITIALIZED_ERROR = NOT_INITIALIZED_ERROR;
function createNavigationContainerRef() {
  var methods = [].concat((0, _toConsumableArray2.default)(Object.keys(_routers.CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);
  var listeners = {};
  var removeListener = function removeListener(event, callback) {
    if (listeners[event]) {
      listeners[event] = listeners[event].filter(function (cb) {
        return cb !== callback;
      });
    }
  };
  var current = null;
  var ref = Object.assign({
    get current() {
      return current;
    },
    set current(value) {
      current = value;
      if (value != null) {
        Object.entries(listeners).forEach(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            event = _ref2[0],
            callbacks = _ref2[1];
          callbacks.forEach(function (callback) {
            value.addListener(event, callback);
          });
        });
      }
    },
    isReady: function isReady() {
      if (current == null) {
        return false;
      }
      return current.isReady();
    }
  }, methods.reduce(function (acc, name) {
    acc[name] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (current == null) {
        switch (name) {
          case 'addListener':
            {
              var event = args[0],
                callback = args[1];
              listeners[event] = listeners[event] || [];
              listeners[event].push(callback);
              return function () {
                return removeListener(event, callback);
              };
            }
          case 'removeListener':
            {
              var _event = args[0],
                _callback = args[1];
              removeListener(_event, _callback);
              break;
            }
          default:
            console.error(NOT_INITIALIZED_ERROR);
        }
      } else {
        var _current;
        return (_current = current)[name].apply(_current, args);
      }
    };
    return acc;
  }, {}));
  return ref;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUMsRUFBRSxDQUFDLENBQUMsRUFDTjtFQUVELE9BQU9ULEdBQUc7QUFDWiIsIm5hbWVzIjpbIk5PVF9JTklUSUFMSVpFRF9FUlJPUiIsImV4cG9ydHMiLCJjcmVhdGVOYXZpZ2F0aW9uQ29udGFpbmVyUmVmIiwibWV0aG9kcyIsIk9iamVjdCIsImtleXMiLCJDb21tb25BY3Rpb25zIiwibGlzdGVuZXJzIiwicmVtb3ZlTGlzdGVuZXIiLCJldmVudCIsImNhbGxiYWNrIiwiZmlsdGVyIiwiY2IiLCJjdXJyZW50IiwicmVmIiwidmFsdWUiLCJlbnRyaWVzIiwiZm9yRWFjaCIsIl9yZWYiLCJjYWxsYmFja3MiLCJhZGRMaXN0ZW5lciIsImlzUmVhZHkiLCJyZWR1Y2UiLCJhY2MiLCJuYW1lIiwiYXJncyIsInB1c2giLCJjb25zb2xlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6Ii4uLy4uL3NyYyIsInNvdXJjZXMiOlsiY3JlYXRlTmF2aWdhdGlvbkNvbnRhaW5lclJlZi50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=