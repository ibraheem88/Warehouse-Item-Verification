71ce56358a125817176edff3e42a3ea1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = GestureHandlerRootView;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _init = require("./init");
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function GestureHandlerRootView(props) {
  (0, _init.maybeInitializeFabric)();
  return React.createElement(_reactNative.View, props);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2UsU0FBU0Esc0JBQVQsQ0FDYkMsS0FEYSxFQUViO0VBSUE7RUFFQSxPQUFPQyxvQkFBQ0MsaUJBQUQsRUFBVUYsS0FBVixDQUFQO0FBQ0QiLCJuYW1lcyI6WyJHZXN0dXJlSGFuZGxlclJvb3RWaWV3IiwicHJvcHMiLCJSZWFjdCIsIl9yZWFjdE5hdGl2ZSJdLCJzb3VyY2VzIjpbIkdlc3R1cmVIYW5kbGVyUm9vdFZpZXcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVmlldywgVmlld1Byb3BzIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IG1heWJlSW5pdGlhbGl6ZUZhYnJpYyB9IGZyb20gJy4vaW5pdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2VzdHVyZUhhbmRsZXJSb290Vmlld1Byb3BzXG4gIGV4dGVuZHMgUHJvcHNXaXRoQ2hpbGRyZW48Vmlld1Byb3BzPiB7fVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHZXN0dXJlSGFuZGxlclJvb3RWaWV3KFxuICBwcm9wczogR2VzdHVyZUhhbmRsZXJSb290Vmlld1Byb3BzXG4pIHtcbiAgLy8gdHJ5IGluaXRpYWxpemUgZmFicmljIG9uIHRoZSBmaXJzdCByZW5kZXIsIGF0IHRoaXMgcG9pbnQgd2UgY2FuXG4gIC8vIHJlbGlhYmx5IGNoZWNrIGlmIGZhYnJpYyBpcyBlbmFibGVkICh0aGUgZnVuY3Rpb24gY29udGFpbnMgYSBmbGFnXG4gIC8vIHRvIG1ha2Ugc3VyZSBpdCdzIGNhbGxlZCBvbmx5IG9uY2UpXG4gIG1heWJlSW5pdGlhbGl6ZUZhYnJpYygpO1xuXG4gIHJldHVybiA8VmlldyB7Li4ucHJvcHN9IC8+O1xufVxuIl19