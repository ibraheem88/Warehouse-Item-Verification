84c96d6be01f9f7aa94557374877e7a4
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ForceTouchGesture = void 0;
var _gesture = require("./gesture");
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function changeEventCalculator(current, previous) {
  'worklet';

  var changePayload;
  if (previous === undefined) {
    changePayload = {
      forceChange: current.force
    };
  } else {
    changePayload = {
      forceChange: current.force - previous.force
    };
  }
  return Object.assign({}, current, changePayload);
}
var ForceTouchGesture = function (_gesture$ContinousBas) {
  (0, _inherits2.default)(ForceTouchGesture, _gesture$ContinousBas);
  var _super = _createSuper(ForceTouchGesture);
  function ForceTouchGesture() {
    var _this;
    (0, _classCallCheck2.default)(this, ForceTouchGesture);
    _this = _super.call(this);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "config", {});
    _this.handlerName = 'ForceTouchGestureHandler';
    return _this;
  }
  (0, _createClass2.default)(ForceTouchGesture, [{
    key: "minForce",
    value: function minForce(force) {
      this.config.minForce = force;
      return this;
    }
  }, {
    key: "maxForce",
    value: function maxForce(force) {
      this.config.maxForce = force;
      return this;
    }
  }, {
    key: "feedbackOnActivation",
    value: function feedbackOnActivation(value) {
      this.config.feedbackOnActivation = value;
      return this;
    }
  }, {
    key: "onChange",
    value: function onChange(callback) {
      this.handlers.changeEventCalculator = changeEventCalculator;
      return (0, _get2.default)((0, _getPrototypeOf2.default)(ForceTouchGesture.prototype), "onChange", this).call(this, callback);
    }
  }]);
  return ForceTouchGesture;
}(_gesture.ContinousBaseGesture);
exports.ForceTouchGesture = ForceTouchGesture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OztBQVdBLFNBQVNBLHFCQUFULENBQ0VDLE9BREYsRUFFRUMsUUFGRixFQUdFO0VBQ0E7O0VBQ0EsSUFBSUMsYUFBSjtFQUNBLElBQUlELFFBQVEsS0FBS0UsU0FBakIsRUFBNEI7SUFDMUJELGFBQWEsR0FBRztNQUNkRSxXQUFXLEVBQUVKLE9BQU8sQ0FBQ0s7SUFEUCxDQUFoQjtFQUdELENBSkQsTUFJTztJQUNMSCxhQUFhLEdBQUc7TUFDZEUsV0FBVyxFQUFFSixPQUFPLENBQUNLLEtBQVIsR0FBZ0JKLFFBQVEsQ0FBQ0k7SUFEeEIsQ0FBaEI7RUFHRDtFQUVELHlCQUFZTCxPQUFMLEVBQWlCRTtBQUN6QjtBQUFBLElBRVlJLGlCQUFOO0VBQUE7RUFBQTtFQU1MQyw2QkFBYztJQUFBO0lBQUE7SUFDWjtJQURZQyx1RUFGK0MsRUFFL0M7SUFHWixNQUFLQyxXQUFMLEdBQW1CLDBCQUFuQjtJQUFBO0VBQ0Q7RUFBQTtJQUFBO0lBQUEsT0FFREMsa0JBQVNMLEtBQUQsRUFBZ0I7TUFDdEIsS0FBS00sTUFBTCxDQUFZRCxRQUFaLEdBQXVCTCxLQUF2QjtNQUNBLE9BQU8sSUFBUDtJQUNEO0VBQUE7SUFBQTtJQUFBLE9BRURPLGtCQUFTUCxLQUFELEVBQWdCO01BQ3RCLEtBQUtNLE1BQUwsQ0FBWUMsUUFBWixHQUF1QlAsS0FBdkI7TUFDQSxPQUFPLElBQVA7SUFDRDtFQUFBO0lBQUE7SUFBQSxPQUVEUSw4QkFBcUJDLEtBQUQsRUFBaUI7TUFDbkMsS0FBS0gsTUFBTCxDQUFZRSxvQkFBWixHQUFtQ0MsS0FBbkM7TUFDQSxPQUFPLElBQVA7SUFDRDtFQUFBO0lBQUE7SUFBQSxPQUVEQyxrQkFDRUMsUUFETSxFQVNOO01BRUEsS0FBS0MsUUFBTCxDQUFjbEIscUJBQWQsR0FBc0NBLHFCQUF0QztNQUNBLG1IQUFzQmlCLFFBQWY7SUFDUjtFQUFBO0VBQUE7QUFBQSxFQXhDb0NFLDZCQUFoQyIsIm5hbWVzIjpbImNoYW5nZUV2ZW50Q2FsY3VsYXRvciIsImN1cnJlbnQiLCJwcmV2aW91cyIsImNoYW5nZVBheWxvYWQiLCJ1bmRlZmluZWQiLCJmb3JjZUNoYW5nZSIsImZvcmNlIiwiRm9yY2VUb3VjaEdlc3R1cmUiLCJjb25zdHJ1Y3RvciIsIl9kZWZpbmVQcm9wZXJ0eSIsImhhbmRsZXJOYW1lIiwibWluRm9yY2UiLCJjb25maWciLCJtYXhGb3JjZSIsImZlZWRiYWNrT25BY3RpdmF0aW9uIiwidmFsdWUiLCJvbkNoYW5nZSIsImNhbGxiYWNrIiwiaGFuZGxlcnMiLCJDb250aW5vdXNCYXNlR2VzdHVyZSJdLCJzb3VyY2VzIjpbImZvcmNlVG91Y2hHZXN0dXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VHZXN0dXJlQ29uZmlnLCBDb250aW5vdXNCYXNlR2VzdHVyZSB9IGZyb20gJy4vZ2VzdHVyZSc7XG5pbXBvcnQge1xuICBGb3JjZVRvdWNoR2VzdHVyZUNvbmZpZyxcbiAgRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkLFxufSBmcm9tICcuLi9Gb3JjZVRvdWNoR2VzdHVyZUhhbmRsZXInO1xuaW1wb3J0IHsgR2VzdHVyZVVwZGF0ZUV2ZW50IH0gZnJvbSAnLi4vZ2VzdHVyZUhhbmRsZXJDb21tb24nO1xuXG5leHBvcnQgdHlwZSBGb3JjZVRvdWNoR2VzdHVyZUNoYW5nZUV2ZW50UGF5bG9hZCA9IHtcbiAgZm9yY2VDaGFuZ2U6IG51bWJlcjtcbn07XG5cbmZ1bmN0aW9uIGNoYW5nZUV2ZW50Q2FsY3VsYXRvcihcbiAgY3VycmVudDogR2VzdHVyZVVwZGF0ZUV2ZW50PEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZD4sXG4gIHByZXZpb3VzPzogR2VzdHVyZVVwZGF0ZUV2ZW50PEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZD5cbikge1xuICAnd29ya2xldCc7XG4gIGxldCBjaGFuZ2VQYXlsb2FkOiBGb3JjZVRvdWNoR2VzdHVyZUNoYW5nZUV2ZW50UGF5bG9hZDtcbiAgaWYgKHByZXZpb3VzID09PSB1bmRlZmluZWQpIHtcbiAgICBjaGFuZ2VQYXlsb2FkID0ge1xuICAgICAgZm9yY2VDaGFuZ2U6IGN1cnJlbnQuZm9yY2UsXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBjaGFuZ2VQYXlsb2FkID0ge1xuICAgICAgZm9yY2VDaGFuZ2U6IGN1cnJlbnQuZm9yY2UgLSBwcmV2aW91cy5mb3JjZSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHsgLi4uY3VycmVudCwgLi4uY2hhbmdlUGF5bG9hZCB9O1xufVxuXG5leHBvcnQgY2xhc3MgRm9yY2VUb3VjaEdlc3R1cmUgZXh0ZW5kcyBDb250aW5vdXNCYXNlR2VzdHVyZTxcbiAgRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkLFxuICBGb3JjZVRvdWNoR2VzdHVyZUNoYW5nZUV2ZW50UGF5bG9hZFxuPiB7XG4gIHB1YmxpYyBjb25maWc6IEJhc2VHZXN0dXJlQ29uZmlnICYgRm9yY2VUb3VjaEdlc3R1cmVDb25maWcgPSB7fTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5oYW5kbGVyTmFtZSA9ICdGb3JjZVRvdWNoR2VzdHVyZUhhbmRsZXInO1xuICB9XG5cbiAgbWluRm9yY2UoZm9yY2U6IG51bWJlcikge1xuICAgIHRoaXMuY29uZmlnLm1pbkZvcmNlID0gZm9yY2U7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBtYXhGb3JjZShmb3JjZTogbnVtYmVyKSB7XG4gICAgdGhpcy5jb25maWcubWF4Rm9yY2UgPSBmb3JjZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZlZWRiYWNrT25BY3RpdmF0aW9uKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5jb25maWcuZmVlZGJhY2tPbkFjdGl2YXRpb24gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG9uQ2hhbmdlKFxuICAgIGNhbGxiYWNrOiAoXG4gICAgICBldmVudDogR2VzdHVyZVVwZGF0ZUV2ZW50PFxuICAgICAgICBHZXN0dXJlVXBkYXRlRXZlbnQ8XG4gICAgICAgICAgRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkICZcbiAgICAgICAgICAgIEZvcmNlVG91Y2hHZXN0dXJlQ2hhbmdlRXZlbnRQYXlsb2FkXG4gICAgICAgID5cbiAgICAgID5cbiAgICApID0+IHZvaWRcbiAgKSB7XG4gICAgLy8gQHRzLWlnbm9yZSBUUyBiZWluZyBvdmVycHJvdGVjdGl2ZSwgRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkIGlzIFJlY29yZFxuICAgIHRoaXMuaGFuZGxlcnMuY2hhbmdlRXZlbnRDYWxjdWxhdG9yID0gY2hhbmdlRXZlbnRDYWxjdWxhdG9yO1xuICAgIHJldHVybiBzdXBlci5vbkNoYW5nZShjYWxsYmFjayk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgRm9yY2VUb3VjaEdlc3R1cmVUeXBlID0gSW5zdGFuY2VUeXBlPHR5cGVvZiBGb3JjZVRvdWNoR2VzdHVyZT47XG4iXX0=