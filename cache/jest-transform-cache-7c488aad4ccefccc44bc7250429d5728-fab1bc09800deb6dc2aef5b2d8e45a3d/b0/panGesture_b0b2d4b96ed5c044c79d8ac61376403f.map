{"version":3,"mappings":"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","names":["changeEventCalculator","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","PanGesture","constructor","_defineProperty","handlerName","activeOffsetY","offset","Array","isArray","config","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","value","avgTouches","enableTrackpadTwoFingerGesture","activateAfterLongPress","duration","onChange","callback","handlers","ContinousBaseGesture"],"sources":["panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\nexport type PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  activeOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  activeOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  activateAfterLongPress(duration: number) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"]}